import sys, csv, operator


#1. Which Region have the most State Universities?
def get_region_with_most_suc():
  f = open('suc_ph.csv', 'r')
  suc = {}
  for index, line in enumerate(f):
    row = line.split(',')
    if row[0] in suc:
      suc[row[0]] += 1
    else:
      suc[row[0]] = 1
  f.close()

  suc_list = sorted(suc.items(), key=operator.itemgetter(1), reverse=True)
  print "1. The region with the most SUC is " + suc_list[0][0]
  

#2. Which Region have the most enrollees?
def get_region_with_most_enrollees_by_school_year(school_year):
  f = open('suc_ph.csv', 'r')
  if school_year == '2010-2011':
    sy = 2
  elif school_year == '2011-2012':
    sy = 3
  elif school_year == '2012-2013':
    sy = 4
  else:
    print "2. Invalid school year!"
    return 0
  
  suc = {}
  for index, line in enumerate(f):
    row = line.split(',')
    if row[sy].isdigit():
      if row[0] in suc:
        suc[row[0]] += int(row[sy])
      else:
        suc[row[0]] = int(row[sy])
  f.close()

  suc_list = sorted(suc.items(), key=operator.itemgetter(1), reverse=True)
  print "2. The region with the most SUC enrollees is " + suc_list[0][0]

#3. Which Region have the most graduates?
def get_region_with_most_graduates_by_school_year(school_year):
  f = open('suc_ph.csv', 'r')
  if school_year == '2010-2011':
    sy = 5
  elif school_year == '2011-2012':
    sy = 6
  elif school_year == '2012-2013':
    sy = 7
  else:
    print "3. Invalid school year!"
    return 0
  
  suc = {}
  for index, line in enumerate(f):
    row = line.split(',')
    if row[sy].isdigit():
      if row[0] in suc:
        suc[row[0]] += int(row[sy])
      else:
        suc[row[0]] = int(row[sy])
  f.close()

  suc_list = sorted(suc.items(), key=operator.itemgetter(1), reverse=True)
  
  print "3. The region with the most SUC graduates is " + suc_list[0][0]

#4 top 3 SUC who has the chepeast tuition fee by schoolyear
def get_top_3_cheapest_by_school_year(level, school_year):
  f = open('tuitionfeeperunitsucproglevel20102013.csv', 'r')
  if school_year == '2010-2011' and level == 'BS':
    sy = 2
  elif school_year == '2010-2011' and level == 'MS':
    sy = 3
  elif school_year == '2010-2011' and level == 'PHD':
    sy = 4
  elif school_year == '2011-2012' and level == 'BS':
    sy = 5
  elif school_year == '2011-2012' and level == 'MS':
    sy = 6
  elif school_year == '2011-2012' and level == 'PHD':
    sy = 7
  elif school_year == '2012-2013' and level == 'BS':
    sy = 8
  elif school_year == '2012-2013' and level == 'MS':
    sy = 9
  elif school_year == '2012-2013' and level == 'PHD':
    sy = 10
  
  else:
    print "4. Invalid school year and level!"
    return 0
  
  suc = {}
  for index, line in enumerate(f):
    row = line.split(',')
    if row[sy].isdigit():
      if row[1] in suc:
        suc[row[1]] += int(row[sy])
      else:
        suc[row[1]] = int(row[sy])
  f.close()

  suc_list = sorted(suc.items(), key=operator.itemgetter(1), reverse=False)

  print "4. Top 3 cheapest SUC for BS level in school year 2010-2011"
  print "  1. " + str(suc_list[0][0])
  print "  2. " + str(suc_list[1][0])
  print "  3. " + str(suc_list[2][0])

#5 top 3 SUC who has the most expensive tuition fee by schoolyear
def get_top_3_most_expensive_by_school_year(level, school_year):
  f = open('tuitionfeeperunitsucproglevel20102013.csv', 'r')
  if school_year == '2010-2011' and level == 'BS':
    sy = 2
  elif school_year == '2010-2011' and level == 'MS':
    sy = 3
  elif school_year == '2010-2011' and level == 'PHD':
    sy = 4
  elif school_year == '2011-2012' and level == 'BS':
    sy = 5
  elif school_year == '2011-2012' and level == 'MS':
    sy = 6
  elif school_year == '2011-2012' and level == 'PHD':
    sy = 7
  elif school_year == '2012-2013' and level == 'BS':
    sy = 8
  elif school_year == '2012-2013' and level == 'MS':
    sy = 9
  elif school_year == '2012-2013' and level == 'PHD':
    sy = 10
  
  else:
    print "4. Invalid school year and level!"
    return 0
  
  suc = {}
  for index, line in enumerate(f):
    row = line.split(',')
    if row[sy].isdigit():
      if row[1] in suc:
        suc[row[1]] += int(row[sy])
      else:
        suc[row[1]] = int(row[sy])
  f.close()

  suc_list = sorted(suc.items(), key=operator.itemgetter(1), reverse=True)

  print "5. Top 3 expensive SUC for BS level in school year 2010-2011"
  print "  1. " + str(suc_list[0][0])
  print "  2. " + str(suc_list[1][0])
  print "  3. " + str(suc_list[2][0])

#6 list all SUC who have increased their tuition fee from school year 2010-2011 to 2012-2013
def all_suc_who_have_increased_tuition_fee():
  f = open('tuitionfeeperunitsucproglevel20102013.csv', 'r')

  BS1 = 2
  BS2 = 5
  BS3 = 8
  MS1 = 3
  MS2 = 6
  MS3 = 9
  PHD1 = 4
  PHD2 = 7
  PHD3 = 10
  x = 0
  
  suc = {}
  for index, line in enumerate(f):
    row = line.split(',')
    if row[BS1] < row[BS3]:
      if row[BS1].isdigit() and row[BS2].isdigit() and row[BS3].isdigit():
        if row[1] in suc:
          pass
        else:
          suc[row[1]] = 1
    if row[MS1] < row[MS3]:
      if row[MS1].isdigit() and row[MS2].isdigit() and row[MS3].isdigit():
        if row[1] in suc:
          pass
        else:
          suc[row[1]] = 1
    if row[PHD1] < row[PHD3]:
      if row[PHD1].isdigit() and row[PHD2].isdigit() and row[PHD3].isdigit():
        if row[1] in suc:
          pass
        else:
          suc[row[1]] = 1
  f.close()

  suc_list = sorted(suc.items(), key=operator.itemgetter(1), reverse=True)
  print "6. List of SUC who have increased their tuition fee from school year 2010-2011 to 2012-2013"
  for name in suc_list:
    print "  " + str(x+1) + ". " + str(suc_list[x][0])
    x += 1

#7 which discipline has the highest passing rate?
def get_discipline_with_highest_passing_rate_by_shool_year(school_year):
  f = open('performancesucprclicensureexam20102012.csv', 'r')
  if school_year == '2010':
    pass_sy = 3
    taker_sy = 7
  elif school_year == '2011':
    pass_sy = 4
    taker_sy = 8
  elif school_year == '2012':
    pass_sy = 5
    taker_sy = 9
  else:
    print "7. Invalid school year!"
    return 0

  x = 0
  suc = {}
  suc2 = {}
  rate = {}

  for index, line in enumerate(f):
    row = line.split(',')
    if row[pass_sy].isdigit() and row[2] != 'Total':
      if row[2] in suc and row[2] in suc2:
        suc[row[2]] += int(row[pass_sy])
        suc2[row[2]] += int(row[taker_sy])
        
      else:
        suc[row[2]] = int(row[pass_sy])
        suc2[row[2]] = int(row[taker_sy])
         
      rate[row[2]] =  (float(row[pass_sy]) / float(row[taker_sy]))  * 100
      
  f.close()

  #suc_list = sorted(suc.items(), key=operator.itemgetter(1), reverse=True)
  #suc_listtake = sorted(suc2.items(), key=operator.itemgetter(1), reverse=True)
  suc_rate = sorted(rate.items(), key=operator.itemgetter(1), reverse=True)
  print "7. The discipline which has the highest passing rate is " + str(suc_rate[0][0])
 
#8 list top 3 SUC with the most passing rate by discipline by school year
def get_top_3_suc_performer_by_discipline_by_year(discipline, school_year):
  f = open('performancesucprclicensureexam20102012.csv', 'r')
  if school_year == '2010':
    pass_sy = 3
    taker_sy = 7
  elif school_year == '2011':
    pass_sy = 4
    taker_sy = 8
  elif school_year == '2012':
    pass_sy = 5
    taker_sy = 9
  else:
    print "7. Invalid school year!"
    return 0
  x = 0
  suc = {}
  suc2 = {}
  rate = {}
  for index, line in enumerate(f):
    row = line.split(',')
    if row[pass_sy].isdigit() and row[2] == 'Accountancy':
      if row[1] in suc and row[1] in suc2:
        suc[row[1]] += int(row[pass_sy])
        suc2[row[1]] += int(row[taker_sy])
        
      else:
        suc[row[1]] = int(row[pass_sy])
        suc2[row[1]] = int(row[taker_sy])
         
      rate[row[1]] =  (float(row[pass_sy]) / float(row[taker_sy]))  * 100
  f.close()

  suc_rate = sorted(rate.items(), key=operator.itemgetter(1), reverse=True)

  print "8. Top 3  SUC with highest passing rate in Accountancy for school year 2010-2011" 
  print "  1. " + str(suc_rate[0][0]) 
  print "  2. " + str(suc_rate[1][0])
  print "  3. " + str(suc_rate[2][0])

def main():
  get_region_with_most_suc()
  get_region_with_most_enrollees_by_school_year('2010-2011')
  get_region_with_most_graduates_by_school_year('2010-2011')
  get_top_3_cheapest_by_school_year('BS', '2010-2011')
  get_top_3_most_expensive_by_school_year('BS', '2010-2011')
  all_suc_who_have_increased_tuition_fee()
  get_discipline_with_highest_passing_rate_by_shool_year('2010')
  get_top_3_suc_performer_by_discipline_by_year('Accountancy', '2011')


# This is the standard boilerplate that calls the main() function.
if __name__ == '__main__':
  main()
